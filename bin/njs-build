#!/usr/bin/env node

/**
 * Module dependencies.
 */

// var build = require('../lib/build');
var fs = require('fs');
var write = fs.writeFileSync;
var path = require('path');
// var resolve = path.resolve;
var mkdir = require('mkdirp');
var resolve = require('component-resolver');
var build = require('component-builder');
var jade = require('builder-jade');
var stylus = require('../lib/build/stylus');

// Little hack to include `NODE_PATH=.`
// require('node-path')(module, [resolve('.')]);

/**
 * old
 */

// var builder = build.createBuilder();
// builder.build(function(err, res) {
//   if (err) return console.log(err);
//   write('public/app.js', res.require + res.js);
//   write('public/app.css', res.css);
// });

/**
 * Component(1)
 */

resolve(process.cwd(), {
  // install the remote components locally
  install: true,
  root: 'public'
}, function (err, tree) {
  if (err) console.log(err), process.exit(1);

  mkdir('public');

  build.scripts(tree)
    .use('scripts', build.plugins.js())
    .use('templates', build.plugins.string())
    .use('jade', jade({runtime: true}))
    .end(function (err, js) {
      if (err) throw err;
      write('public/app.js', build.scripts.require + js);
    });

  build.styles(tree)
    .use('styles', build.plugins.css())
    .use('styles', stylus())
    .end(function (err, string) {
      if (err) throw err;
      fs.writeFileSync('public/app.css', string);
    });

})
